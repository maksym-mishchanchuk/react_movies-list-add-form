{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","htmlFor","type","classNames","event","target","onBlur","allFields","NewMovie","onAdd","count","setCount","fieldsForms","setFieldsForms","isSubmitDisabled","updateTitleField","fieldName","newValue","prevState","onSubmit","preventDefault","newMovie","disabled","App","moviesFromServer","visibleMovies","setVisibleMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e2e9135.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie)=> void;\n};\n\nconst DEFAULT_VALUE = '';\n\nconst allFields = {\n  title: DEFAULT_VALUE,\n  description: DEFAULT_VALUE,\n  imgUrl: DEFAULT_VALUE,\n  imdbUrl: DEFAULT_VALUE,\n  imdbId: DEFAULT_VALUE,\n};\n\nexport const NewMovie:React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [fieldsForms, setFieldsForms] = useState(allFields);\n\n  const isSubmitDisabled = !fieldsForms.title\n    || !fieldsForms.imgUrl\n    || !fieldsForms.imdbUrl\n    || !fieldsForms.imdbId;\n\n  const resetField = () => {\n    setFieldsForms(allFields);\n  };\n\n  const handleMovie = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const newMovie: Movie = {\n      title: fieldsForms.title,\n      description: fieldsForms.description,\n      imgUrl: fieldsForms.imgUrl,\n      imdbUrl: fieldsForms.imdbUrl,\n      imdbId: fieldsForms.imdbId,\n    };\n\n    onAdd(newMovie);\n    setCount((prevState) => prevState + 1);\n\n    resetField();\n  };\n\n  const updateTitleField = (fieldName: string, newValue: string) => {\n    setFieldsForms((prevState) => ({ ...prevState, [fieldName]: newValue }));\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleMovie}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={fieldsForms.title}\n        onChange={(newValue) => updateTitleField('title', newValue)}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={fieldsForms.description}\n        onChange={(newValue) => updateTitleField('description', newValue)}\n\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={fieldsForms.imgUrl}\n        onChange={(newValue) => updateTitleField('imgUrl', newValue)}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={fieldsForms.imdbUrl}\n        onChange={(newValue) => updateTitleField('imdbUrl', newValue)}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={fieldsForms.imdbId}\n        onChange={(newValue) => updateTitleField('imdbId', newValue)}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            disabled={isSubmitDisabled}\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [visibleMovies, setVisibleMovies]\n    = useState<Movie[]>([...moviesFromServer]);\n  const handleAddMovies = (movie: Movie) => {\n    setVisibleMovies((prevState) => [...prevState, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={visibleMovies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={handleAddMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}